/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tiendatecnologica_ortizmunozpablo;

import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import java.sql.Connection;
import java.sql.SQLException;
import com.mycompany.tiendatecnologica_ortizmunozpablo.Conexion;
import static com.mycompany.tiendatecnologica_ortizmunozpablo.Conexion.obtenerUsuarioPorNombre;

/**
 *
 * @author alumno
 */

public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal(Usuario usuario) {
        initComponents();
        
 
        // Usar el usuario en la clase Principal
        
    }
    private static void setUsuario(Usuario usuario) {
    Principal.usuario = usuario; 
}
    private static Usuario usuario;
    public int productoId;
    public static  ArrayList<String> lista;
    public static  ArrayList<Integer> lista2;
    public String nombreProducto;
    public Principal() {
        initComponents();
         String nombreUsuario = Inicio.usuario; 

        try (Connection conn = Conexion.getConnection()) {
            // Obtener el usuario de la base de datos
            Usuario usuario = obtenerUsuarioPorNombre(conn, nombreUsuario);

            if (usuario != null) {
               
                setUsuario(usuario);

                
                System.out.println("Usuario cargado: " + usuario.getNombre());
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        jComboBox1.addItem("Electrónica");
        jComboBox1.addItem("Segunda Mano");
        lista = new ArrayList<>();
        lista2= new ArrayList<>();
         int productoId = 0;
        nombreProducto="";
        
        
         // Cargar la imagen original
        ImageIcon iconoOriginal = new ImageIcon(getClass().getResource("/logo1f.png"));
        
        // Escalar la imagen (por ejemplo, a 100x100 píxeles)
        Image imgEscalada = iconoOriginal.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado = new ImageIcon(imgEscalada);
        
        // Cambiar la imagen del botón ya existente
        logo.setIcon(iconoEscalado);
        
         ImageIcon iconoOriginal2 = new ImageIcon(getClass().getResource("/xf.png"));
        
        // Escalar la imagen (por ejemplo, a 100x100 píxeles)
        Image imgEscalada2 = iconoOriginal2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        jButton1.setIcon(iconoEscalado2);
        
        ImageIcon iconoOriginal3 = new ImageIcon(getClass().getResource("/carrof.png"));
        
        // Escalar la imagen (por ejemplo, a 100x100 píxeles)
        Image imgEscalada3 = iconoOriginal3.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado3 = new ImageIcon(imgEscalada3);
        
        // Cambiar la imagen del botón ya existente
        carro.setIcon(iconoEscalado3);
         
    }
    public static Usuario getUsuario() {
        return usuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        logo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        carro = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        img1 = new javax.swing.JButton();
        img3 = new javax.swing.JButton();
        img4 = new javax.swing.JButton();
        img2 = new javax.swing.JButton();
        img5 = new javax.swing.JButton();
        img10 = new javax.swing.JButton();
        img8 = new javax.swing.JButton();
        img6 = new javax.swing.JButton();
        img7 = new javax.swing.JButton();
        img9 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        logo.setBackground(new java.awt.Color(0, 0, 0));
        logo.setBorderPainted(false);
        logo.setContentAreaFilled(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(229, 166, 94));
        jLabel1.setText("TIENDA TECNOLOGICA");

        carro.setBackground(new java.awt.Color(0, 0, 0));
        carro.setBorderPainted(false);
        carro.setContentAreaFilled(false);
        carro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carroMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                carroMouseEntered(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(229, 166, 94));
        jButton4.setText("Ver Datos Usuario");
        jButton4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(229, 166, 94));
        jButton5.setText("Ver Historial Compras");
        jButton5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        img1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img1MouseExited(evt);
            }
        });

        img3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img3MouseExited(evt);
            }
        });

        img4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img4MouseExited(evt);
            }
        });

        img2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img2MouseExited(evt);
            }
        });
        img2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                img2ActionPerformed(evt);
            }
        });

        img5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img5MouseExited(evt);
            }
        });

        img10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img10MouseExited(evt);
            }
        });

        img8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img8MouseExited(evt);
            }
        });

        img6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img6MouseExited(evt);
            }
        });

        img7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img7MouseExited(evt);
            }
        });

        img9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                img9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                img9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                img9MouseExited(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(229, 166, 94));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(carro, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(img2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(img4, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(img6, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(img8, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(img10, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(img1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(img3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(img5, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(img7, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(img9, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(carro, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(img1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img5, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img7, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img9, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(img4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img6, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img8, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(img10, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void img2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_img2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_img2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void carroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carroMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_carroMouseEntered

    private void carroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carroMouseClicked
        Carro Carro = new Carro(usuario);
        Carro.setVisible(true);
        Carro.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_carroMouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        //ver datos usuario
        Datos Datos = new Datos(usuario);
        Datos.setVisible(true);
        Datos.setLocationRelativeTo(null);
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // ver historial compras
        Historial Historial = new Historial();
        Historial.setVisible(true);
        Historial.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5MouseClicked

    private void img1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img1MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 109);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(109);
                            System.out.println(nombreProducto);
                            
 
                       } else {
                           System.out.println("No se encontró el producto con ID " + 109);
                       }
                       // Cerrar la conexión
                        conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 208);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(208);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 208);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img1MouseClicked

    private void img2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img2MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 106);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(106);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 106);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 207);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(207);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 207);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img2MouseClicked

    private void img3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img3MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 104);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(104);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 104);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 209);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(209);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 209);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img3MouseClicked

    private void img4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img4MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 103);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(103);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 103);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 202);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(202);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 202);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img4MouseClicked

    private void img5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img5MouseClicked
          if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 101);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(101);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 101);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 201);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(201);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 201);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img5MouseClicked

    private void img6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img6MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 108);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(108);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 108);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 205);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(205);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 205);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img6MouseClicked

    private void img7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img7MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 105);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(105);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 105);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 206);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(206);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 206);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img7MouseClicked

    private void img8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img8MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 102);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(102);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 102);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 203);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(203);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 203);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img8MouseClicked

    private void img9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img9MouseClicked
        if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 107);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(107);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 107);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 204);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(204);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 204);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img9MouseClicked

    private void img10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img10MouseClicked
         if (jComboBox1.getSelectedItem()=="Electrónica"){
             
                   // Obtener el nombre del producto
                   try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 110);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(110);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 110);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }else {
               try ( // Crear una conexión con la base de datos
                           Connection conn = Conexion.getConnection()) {
                       // Obtener el nombre del producto
                       nombreProducto = Conexion.obtenerNombreProductoPorId(conn, 210);
                       if (nombreProducto != null) {
                           lista.add(nombreProducto);
                           lista2.add(210);
                           System.out.println(nombreProducto);
                       } else {
                           System.out.println("No se encontró el producto con ID " + 210);
                       }
                       // Cerrar la conexión
                       conn.close();
                   }
         catch (SQLException e) {
            e.printStackTrace();
        }
         }
    }//GEN-LAST:event_img10MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen1 = new ImageIcon(getClass().getResource("/altavoz.png"));
        
        
        Image imgEscalada1 = imagen1.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado1 = new ImageIcon(imgEscalada1);
        
        // Cambiar la imagen del botón ya existente
        img1.setIcon(iconoEscalado1);
        
       
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/camara.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img2.setIcon(iconoEscalado2);
        
        ImageIcon imagen3 = new ImageIcon(getClass().getResource("/cascos.png"));
        
        
        Image imgEscalada3 = imagen3.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado3 = new ImageIcon(imgEscalada3);
        
        // Cambiar la imagen del botón ya existente
        img3.setIcon(iconoEscalado3);
        
        ImageIcon imagen4 = new ImageIcon(getClass().getResource("/laptop.png"));
        
        
        Image imgEscalada4 = imagen4.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado4 = new ImageIcon(imgEscalada4);
        
        // Cambiar la imagen del botón ya existente
        img4.setIcon(iconoEscalado4);
        ImageIcon imagen5 = new ImageIcon(getClass().getResource("/nokia.png"));
        
        
        Image imgEscalada5 = imagen5.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado5 = new ImageIcon(imgEscalada5);
        
        // Cambiar la imagen del botón ya existente
        img5.setIcon(iconoEscalado5);
        ImageIcon imagen6 = new ImageIcon(getClass().getResource("/raton.png"));
        
        
        Image imgEscalada6 = imagen6.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado6 = new ImageIcon(imgEscalada6);
        
        // Cambiar la imagen del botón ya existente
        img6.setIcon(iconoEscalado6);
        
        ImageIcon imagen7 = new ImageIcon(getClass().getResource("/reloj.png"));
        
        
        Image imgEscalada7 = imagen7.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado7 = new ImageIcon(imgEscalada7);
        
        // Cambiar la imagen del botón ya existente
        img7.setIcon(iconoEscalado7);
        
        ImageIcon imagen8 = new ImageIcon(getClass().getResource("/tablet.png"));
        
        
        Image imgEscalada8 = imagen8.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado8 = new ImageIcon(imgEscalada8);
        
        // Cambiar la imagen del botón ya existente
        img8.setIcon(iconoEscalado8);
        
        ImageIcon imagen9 = new ImageIcon(getClass().getResource("/teclado.png"));
        
        
        Image imgEscalada9 = imagen9.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado9 = new ImageIcon(imgEscalada9);
        
        // Cambiar la imagen del botón ya existente
        img9.setIcon(iconoEscalado9);
        ImageIcon imagen10 = new ImageIcon(getClass().getResource("/tele.png"));
        
        
        Image imgEscalada10 = imagen10.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado10 = new ImageIcon(imgEscalada10);
        
        // Cambiar la imagen del botón ya existente
        img10.setIcon(iconoEscalado10);
        }else{
            
        
        ImageIcon imagen1 = new ImageIcon(getClass().getResource("/altavozroto.png"));
        
        // Escalar la imagen (por ejemplo, a 100x100 píxeles)
        Image imgEscalada1 = imagen1.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado1 = new ImageIcon(imgEscalada1);
        img1.setIcon(iconoEscalado1);
        
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/camararota.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img2.setIcon(iconoEscalado2);
        
        ImageIcon imagen3 = new ImageIcon(getClass().getResource("/consolarota.png"));
        
        
        Image imgEscalada3 = imagen3.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado3 = new ImageIcon(imgEscalada3);
        
        // Cambiar la imagen del botón ya existente
        img3.setIcon(iconoEscalado3);
        
        ImageIcon imagen4 = new ImageIcon(getClass().getResource("/laptoproto.png"));
        
        
        Image imgEscalada4 = imagen4.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado4 = new ImageIcon(imgEscalada4);
        
        // Cambiar la imagen del botón ya existente
        img4.setIcon(iconoEscalado4);
        ImageIcon imagen5 = new ImageIcon(getClass().getResource("/movilroto.png"));
        
        
        Image imgEscalada5 = imagen5.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado5 = new ImageIcon(imgEscalada5);
        
        // Cambiar la imagen del botón ya existente
        img5.setIcon(iconoEscalado5);
        ImageIcon imagen6 = new ImageIcon(getClass().getResource("/ratonroto.png"));
        
        
        Image imgEscalada6 = imagen6.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado6 = new ImageIcon(imgEscalada6);
        
        // Cambiar la imagen del botón ya existente
        img6.setIcon(iconoEscalado6);
        
        ImageIcon imagen7 = new ImageIcon(getClass().getResource("/relojroto2.png"));
        
        
        Image imgEscalada7 = imagen7.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado7 = new ImageIcon(imgEscalada7);
        
        // Cambiar la imagen del botón ya existente
        img7.setIcon(iconoEscalado7);
        
        ImageIcon imagen8 = new ImageIcon(getClass().getResource("/monitorroto.png"));
        
        
        Image imgEscalada8 = imagen8.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado8 = new ImageIcon(imgEscalada8);
        
        // Cambiar la imagen del botón ya existente
        img8.setIcon(iconoEscalado8);
        
        ImageIcon imagen9 = new ImageIcon(getClass().getResource("/tecladoroto.png"));
        
        
        Image imgEscalada9 = imagen9.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado9 = new ImageIcon(imgEscalada9);
        
        // Cambiar la imagen del botón ya existente
        img9.setIcon(iconoEscalado9);
        ImageIcon imagen10 = new ImageIcon(getClass().getResource("/cargadorroto.png"));
        
        
        Image imgEscalada10 = imagen10.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado10 = new ImageIcon(imgEscalada10);
        
        // Cambiar la imagen del botón ya existente
        img10.setIcon(iconoEscalado10);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void img1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img1MouseEntered
         if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen1 = new ImageIcon(getClass().getResource("/altavoz2.png"));
        
        
        Image imgEscalada1 = imagen1.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado1 = new ImageIcon(imgEscalada1);
        
        // Cambiar la imagen del botón ya existente
        img1.setIcon(iconoEscalado1);

        }else{
            
        
        ImageIcon imagen1 = new ImageIcon(getClass().getResource("/altavozroto2.png"));
        
        // Escalar la imagen (por ejemplo, a 100x100 píxeles)
        Image imgEscalada1 = imagen1.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado1 = new ImageIcon(imgEscalada1);
        img1.setIcon(iconoEscalado1);
        
        }
    }//GEN-LAST:event_img1MouseEntered

    private void img1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img1MouseExited
         if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen1 = new ImageIcon(getClass().getResource("/altavoz.png"));
        
        
        Image imgEscalada1 = imagen1.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado1 = new ImageIcon(imgEscalada1);
        
        // Cambiar la imagen del botón ya existente
        img1.setIcon(iconoEscalado1);
        }else{
            
        
        ImageIcon imagen1 = new ImageIcon(getClass().getResource("/altavozroto.png"));
        
        // Escalar la imagen (por ejemplo, a 100x100 píxeles)
        Image imgEscalada1 = imagen1.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado1 = new ImageIcon(imgEscalada1);
        img1.setIcon(iconoEscalado1);

        }
    }//GEN-LAST:event_img1MouseExited

    private void img2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img2MouseEntered
         if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/camara2.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img2.setIcon(iconoEscalado2);
        }else{
            
        
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/camararota2.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img2.setIcon(iconoEscalado2);

        }
    }//GEN-LAST:event_img2MouseEntered

    private void img2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img2MouseExited
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/camara.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img2.setIcon(iconoEscalado2);
        }else{
            
        
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/camararota.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img2.setIcon(iconoEscalado2);

        }
    }//GEN-LAST:event_img2MouseExited

    private void img3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img3MouseExited
         if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen3 = new ImageIcon(getClass().getResource("/cascos.png"));
        
        
        Image imgEscalada3 = imagen3.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado3 = new ImageIcon(imgEscalada3);
        
        // Cambiar la imagen del botón ya existente
        img3.setIcon(iconoEscalado3);
        }else{
            
        
        ImageIcon imagen3 = new ImageIcon(getClass().getResource("/consolarota.png"));
        
        
        Image imgEscalada3 = imagen3.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado3 = new ImageIcon(imgEscalada3);
        
        // Cambiar la imagen del botón ya existente
        img3.setIcon(iconoEscalado3);

        }
    }//GEN-LAST:event_img3MouseExited

    private void img3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img3MouseEntered
             if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/cascos2.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img3.setIcon(iconoEscalado2);
        }else{
            
        
        ImageIcon imagen2 = new ImageIcon(getClass().getResource("/consolarota2.png"));
        
        
        Image imgEscalada2 = imagen2.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado2 = new ImageIcon(imgEscalada2);
        
        // Cambiar la imagen del botón ya existente
        img3.setIcon(iconoEscalado2);

        }
    }//GEN-LAST:event_img3MouseEntered

    private void img4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img4MouseEntered
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen4 = new ImageIcon(getClass().getResource("/laptop2.png"));
        
        
        Image imgEscalada4 = imagen4.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado4 = new ImageIcon(imgEscalada4);
        
        // Cambiar la imagen del botón ya existente
        img4.setIcon(iconoEscalado4);
        }else{
            
        
        ImageIcon imagen4 = new ImageIcon(getClass().getResource("/laptoproto2.png"));
        
        
        Image imgEscalada4 = imagen4.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado4 = new ImageIcon(imgEscalada4);
        
        // Cambiar la imagen del botón ya existente
        img4.setIcon(iconoEscalado4);

        }
    }//GEN-LAST:event_img4MouseEntered

    private void img4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img4MouseExited
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen4 = new ImageIcon(getClass().getResource("/laptop.png"));
        
        
        Image imgEscalada4 = imagen4.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado4 = new ImageIcon(imgEscalada4);
        
        // Cambiar la imagen del botón ya existente
        img4.setIcon(iconoEscalado4);
        }else{
            
        
        ImageIcon imagen4 = new ImageIcon(getClass().getResource("/laptoproto.png"));
        
        
        Image imgEscalada4 = imagen4.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado4 = new ImageIcon(imgEscalada4);
        
        // Cambiar la imagen del botón ya existente
        img4.setIcon(iconoEscalado4);

        }
    }//GEN-LAST:event_img4MouseExited

    private void img5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img5MouseEntered
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen5 = new ImageIcon(getClass().getResource("/nokia2.png"));
        
        
        Image imgEscalada5 = imagen5.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado5 = new ImageIcon(imgEscalada5);
        
        // Cambiar la imagen del botón ya existente
        img5.setIcon(iconoEscalado5);
        }else{
            
        
        ImageIcon imagen5 = new ImageIcon(getClass().getResource("/movilroto2.png"));
        
        
        Image imgEscalada5 = imagen5.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado5 = new ImageIcon(imgEscalada5);
        
        // Cambiar la imagen del botón ya existente
        img5.setIcon(iconoEscalado5);

        }
    }//GEN-LAST:event_img5MouseEntered

    private void img5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img5MouseExited
         if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen5 = new ImageIcon(getClass().getResource("/nokia.png"));
        
        
        Image imgEscalada5 = imagen5.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado5 = new ImageIcon(imgEscalada5);
        
        // Cambiar la imagen del botón ya existente
        img5.setIcon(iconoEscalado5);
        }else{
            
        
        ImageIcon imagen5 = new ImageIcon(getClass().getResource("/movilroto.png"));
        
        
        Image imgEscalada5 = imagen5.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado5 = new ImageIcon(imgEscalada5);
        
        // Cambiar la imagen del botón ya existente
        img5.setIcon(iconoEscalado5);

        }
    }//GEN-LAST:event_img5MouseExited

    private void img6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img6MouseEntered
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen6 = new ImageIcon(getClass().getResource("/raton2.png"));
        
        
        Image imgEscalada6 = imagen6.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado6 = new ImageIcon(imgEscalada6);
        
        // Cambiar la imagen del botón ya existente
        img6.setIcon(iconoEscalado6);
        }else{
            
        
        ImageIcon imagen6 = new ImageIcon(getClass().getResource("/ratonroto2.png"));
        
        
        Image imgEscalada6 = imagen6.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado6 = new ImageIcon(imgEscalada6);
        
        // Cambiar la imagen del botón ya existente
        img6.setIcon(iconoEscalado6);

        }
    }//GEN-LAST:event_img6MouseEntered

    private void img6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img6MouseExited
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen6 = new ImageIcon(getClass().getResource("/raton.png"));
        
        
        Image imgEscalada6 = imagen6.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado6 = new ImageIcon(imgEscalada6);
        
        // Cambiar la imagen del botón ya existente
        img6.setIcon(iconoEscalado6);
        }else{
            
        
        ImageIcon imagen6 = new ImageIcon(getClass().getResource("/ratonroto.png"));
        
        
        Image imgEscalada6 = imagen6.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado6 = new ImageIcon(imgEscalada6);
        
        // Cambiar la imagen del botón ya existente
        img6.setIcon(iconoEscalado6);

        }
    }//GEN-LAST:event_img6MouseExited

    private void img7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img7MouseEntered
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen7 = new ImageIcon(getClass().getResource("/reloj2.png"));
        
        
        Image imgEscalada7 = imagen7.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado7 = new ImageIcon(imgEscalada7);
        
        // Cambiar la imagen del botón ya existente
        img7.setIcon(iconoEscalado7);
        }else{
            
        
        ImageIcon imagen7 = new ImageIcon(getClass().getResource("/relojroto2.png"));
        
        
        Image imgEscalada7 = imagen7.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado7 = new ImageIcon(imgEscalada7);
        
        // Cambiar la imagen del botón ya existente
        img7.setIcon(iconoEscalado7);

        }
    }//GEN-LAST:event_img7MouseEntered

    private void img7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img7MouseExited
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen7 = new ImageIcon(getClass().getResource("/reloj.png"));
        
        
        Image imgEscalada7 = imagen7.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado7 = new ImageIcon(imgEscalada7);
        
        // Cambiar la imagen del botón ya existente
        img7.setIcon(iconoEscalado7);
        }else{
            
        
        ImageIcon imagen7 = new ImageIcon(getClass().getResource("/relojroto2.png"));
        
        
        Image imgEscalada7 = imagen7.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado7 = new ImageIcon(imgEscalada7);
        
        // Cambiar la imagen del botón ya existente
        img7.setIcon(iconoEscalado7);

        }
    }//GEN-LAST:event_img7MouseExited

    private void img8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img8MouseEntered
         if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen8 = new ImageIcon(getClass().getResource("/tablet2.png"));
        
        
        Image imgEscalada8 = imagen8.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado8 = new ImageIcon(imgEscalada8);
        
        // Cambiar la imagen del botón ya existente
        img8.setIcon(iconoEscalado8);
        }else{
            
        
        ImageIcon imagen8 = new ImageIcon(getClass().getResource("/monitorroto2.png"));
        
        
        Image imgEscalada8 = imagen8.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado8 = new ImageIcon(imgEscalada8);
        
        // Cambiar la imagen del botón ya existente
        img8.setIcon(iconoEscalado8);

        }
    }//GEN-LAST:event_img8MouseEntered

    private void img8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img8MouseExited
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen8 = new ImageIcon(getClass().getResource("/tablet.png"));
        
        
        Image imgEscalada8 = imagen8.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado8 = new ImageIcon(imgEscalada8);
        
        // Cambiar la imagen del botón ya existente
        img8.setIcon(iconoEscalado8);
        }else{
            
        
        ImageIcon imagen8 = new ImageIcon(getClass().getResource("/monitorroto.png"));
        
        
        Image imgEscalada8 = imagen8.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado8 = new ImageIcon(imgEscalada8);
        
        // Cambiar la imagen del botón ya existente
        img8.setIcon(iconoEscalado8);

        }
    }//GEN-LAST:event_img8MouseExited

    private void img9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img9MouseEntered
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen9 = new ImageIcon(getClass().getResource("/teclado2.png"));
        
        
        Image imgEscalada9 = imagen9.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado9 = new ImageIcon(imgEscalada9);
        
        // Cambiar la imagen del botón ya existente
        img9.setIcon(iconoEscalado9);
        }else{
            
        
        ImageIcon imagen9 = new ImageIcon(getClass().getResource("/tecladoroto2.png"));
        
        
        Image imgEscalada9 = imagen9.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado9 = new ImageIcon(imgEscalada9);
        
        // Cambiar la imagen del botón ya existente
        img9.setIcon(iconoEscalado9);

        }
    }//GEN-LAST:event_img9MouseEntered

    private void img9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img9MouseExited
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen9 = new ImageIcon(getClass().getResource("/teclado.png"));
        
        
        Image imgEscalada9 = imagen9.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado9 = new ImageIcon(imgEscalada9);
        
        // Cambiar la imagen del botón ya existente
        img9.setIcon(iconoEscalado9);
        }else{
            
        
        ImageIcon imagen9 = new ImageIcon(getClass().getResource("/tecladoroto.png"));
        
        
        Image imgEscalada9 = imagen9.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado9 = new ImageIcon(imgEscalada9);
        
        // Cambiar la imagen del botón ya existente
        img9.setIcon(iconoEscalado9);

        }
    }//GEN-LAST:event_img9MouseExited

    private void img10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img10MouseEntered
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen10 = new ImageIcon(getClass().getResource("/tele2.png"));
        
        
        Image imgEscalada10 = imagen10.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado10 = new ImageIcon(imgEscalada10);
        
        // Cambiar la imagen del botón ya existente
        img10.setIcon(iconoEscalado10);
        }else{
            
        
        ImageIcon imagen10 = new ImageIcon(getClass().getResource("/cargadorroto2.png"));
        
        
        Image imgEscalada10 = imagen10.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado10 = new ImageIcon(imgEscalada10);
        
        // Cambiar la imagen del botón ya existente
        img10.setIcon(iconoEscalado10);

        }
    }//GEN-LAST:event_img10MouseEntered

    private void img10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img10MouseExited
        if (jComboBox1.getSelectedItem()=="Electrónica"){
        ImageIcon imagen10 = new ImageIcon(getClass().getResource("/tele.png"));
        
        
        Image imgEscalada10 = imagen10.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado10 = new ImageIcon(imgEscalada10);
        
        // Cambiar la imagen del botón ya existente
        img10.setIcon(iconoEscalado10);
        }else{
            
        
        ImageIcon imagen10 = new ImageIcon(getClass().getResource("/cargadorroto.png"));
        
        
        Image imgEscalada10 = imagen10.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon iconoEscalado10 = new ImageIcon(imgEscalada10);
        
        // Cambiar la imagen del botón ya existente
        img10.setIcon(iconoEscalado10);

        }
    }//GEN-LAST:event_img10MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton carro;
    private javax.swing.JButton img1;
    private javax.swing.JButton img10;
    private javax.swing.JButton img2;
    private javax.swing.JButton img3;
    private javax.swing.JButton img4;
    private javax.swing.JButton img5;
    private javax.swing.JButton img6;
    private javax.swing.JButton img7;
    private javax.swing.JButton img8;
    private javax.swing.JButton img9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logo;
    // End of variables declaration//GEN-END:variables
}
